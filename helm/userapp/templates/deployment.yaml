apiVersion: apps/v1
kind: Deployment
metadata:
  name: userapp-deployment
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: ryzhkov-userapp
  template:
    metadata:
      annotations:
        nikita.ru/scrape_every_30s: "true"
        prometheus.io/port: "8000"
      labels:
        app: ryzhkov-userapp
    spec:
      containers:
        - name: userapp
          image: kappy4uno/userapp:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .Values.userapp.port }}
          volumeMounts:
            - mountPath: /etc/userapp
              name: userappconfig
              readOnly: true
            - mountPath: /etc/pgsecret
              name: pgpassconfig
              readOnly: true
          livenessProbe:
            httpGet:
              port: {{ .Values.userapp.port }}
              path: /health
            initialDelaySeconds: 3
            periodSeconds: 1
          readinessProbe:
            httpGet:
              port: {{ .Values.userapp.port }}
              path: /health
            initialDelaySeconds: 3
            periodSeconds: 1
          startupProbe:
            httpGet:
              port: {{ .Values.userapp.port }}
              path: /health
            initialDelaySeconds: 3
            periodSeconds: 1
            failureThreshold: 30
      volumes:
        - name: userappconfig
          configMap:
            name: userapp-config
        - name: pgpassconfig
          secret:
            secretName: pguser-postgresql
